version: '3'

services:
  web:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - database
      - create-bucket
      - cache

  nginx:
    image: nginx:1.25.2-bookworm
    volumes:
      - ./deploy/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - web

  database:
    hostname: postgres
    image: postgres:latest
    env_file:
      - .env
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}
    volumes:
      - db:/var/lib/postgresql/data
    restart: always

  bucket:
    image: minio/minio:latest
    hostname: minio
    volumes:
      - bucket:/data
    ports:
      - ${MINIO_EXTERNAL_HTTP_PORT}:9001
    expose:
      - 9000
    env_file:
      - .env
    command: server /data --console-address :9001

  create-bucket:
    image: minio/mc:latest
    depends_on:
      - bucket
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 ${MINIO_URL} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb s3/${MINIO_BUCKET_NAME}/;
      /usr/bin/mc anonymous set download s3/${MINIO_BUCKET_NAME};
      "

  cache:
    hostname: redis
    image: redis:7.2.1-bookworm
    volumes:
      - cache:/var/lib/redis/data

  worker:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
    command: python -m celery -A core.celery worker -l INFO -P threads
    volumes:
      - .:/app
    restart: always
    env_file:
      - .env
    depends_on:
      - web
      - cache

volumes:
  db:
  bucket:
  cache:
